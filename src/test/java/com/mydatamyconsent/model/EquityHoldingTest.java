/*
 * My Data My Consent - Developer API
 * Unleashing the power of consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@mydatamyconsent.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mydatamyconsent.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for EquityHolding
 */
public class EquityHoldingTest {
    private final EquityHolding model = new EquityHolding();

    /**
     * Model tests for EquityHolding
     */
    @Test
    public void testEquityHolding() {
        // TODO: test EquityHolding
    }

    /**
     * Test the property 'issuerName'
     */
    @Test
    public void issuerNameTest() {
        // TODO: test issuerName
    }

    /**
     * Test the property 'exchange'
     */
    @Test
    public void exchangeTest() {
        // TODO: test exchange
    }

    /**
     * Test the property 'isin'
     */
    @Test
    public void isinTest() {
        // TODO: test isin
    }

    /**
     * Test the property 'units'
     */
    @Test
    public void unitsTest() {
        // TODO: test units
    }

    /**
     * Test the property 'investmentDateTime'
     */
    @Test
    public void investmentDateTimeTest() {
        // TODO: test investmentDateTime
    }

    /**
     * Test the property 'rate'
     */
    @Test
    public void rateTest() {
        // TODO: test rate
    }

    /**
     * Test the property 'lastTradedPrice'
     */
    @Test
    public void lastTradedPriceTest() {
        // TODO: test lastTradedPrice
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

}
