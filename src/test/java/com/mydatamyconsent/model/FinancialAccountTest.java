/*
 * My Data My Consent - Developer API
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mydatamyconsent.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mydatamyconsent.model.Activity;
import com.mydatamyconsent.model.ApprovedConsentRequest;
import com.mydatamyconsent.model.SharedWith;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for FinancialAccount
 */
public class FinancialAccountTest {
    private final FinancialAccount model = new FinancialAccount();

    /**
     * Model tests for FinancialAccount
     */
    @Test
    public void testFinancialAccount() {
        // TODO: test FinancialAccount
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'issuer'
     */
    @Test
    public void issuerTest() {
        // TODO: test issuer
    }

    /**
     * Test the property 'logoUrl'
     */
    @Test
    public void logoUrlTest() {
        // TODO: test logoUrl
    }

    /**
     * Test the property 'categoryId'
     */
    @Test
    public void categoryIdTest() {
        // TODO: test categoryId
    }

    /**
     * Test the property 'categoryName'
     */
    @Test
    public void categoryNameTest() {
        // TODO: test categoryName
    }

    /**
     * Test the property 'accountName'
     */
    @Test
    public void accountNameTest() {
        // TODO: test accountName
    }

    /**
     * Test the property 'accountLogoUrl'
     */
    @Test
    public void accountLogoUrlTest() {
        // TODO: test accountLogoUrl
    }

    /**
     * Test the property 'balance'
     */
    @Test
    public void balanceTest() {
        // TODO: test balance
    }

    /**
     * Test the property 'balanceType'
     */
    @Test
    public void balanceTypeTest() {
        // TODO: test balanceType
    }

    /**
     * Test the property 'isShared'
     */
    @Test
    public void isSharedTest() {
        // TODO: test isShared
    }

    /**
     * Test the property 'sharedWith'
     */
    @Test
    public void sharedWithTest() {
        // TODO: test sharedWith
    }

    /**
     * Test the property 'isReceived'
     */
    @Test
    public void isReceivedTest() {
        // TODO: test isReceived
    }

    /**
     * Test the property 'expiresAtUtc'
     */
    @Test
    public void expiresAtUtcTest() {
        // TODO: test expiresAtUtc
    }

    /**
     * Test the property 'activities'
     */
    @Test
    public void activitiesTest() {
        // TODO: test activities
    }

    /**
     * Test the property 'approvedConsentRequests'
     */
    @Test
    public void approvedConsentRequestsTest() {
        // TODO: test approvedConsentRequests
    }

}
