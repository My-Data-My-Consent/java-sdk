/*
 * My Data My Consent - Developer API
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mydatamyconsent.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mydatamyconsent.model.ApplicationUser;
import com.mydatamyconsent.model.Country;
import com.mydatamyconsent.model.CountryState;
import com.mydatamyconsent.model.Organization;
import com.mydatamyconsent.model.OrganizationAddressType;
import com.mydatamyconsent.model.ProofDocumentType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for OrganizationAddress
 */
public class OrganizationAddressTest {
    private final OrganizationAddress model = new OrganizationAddress();

    /**
     * Model tests for OrganizationAddress
     */
    @Test
    public void testOrganizationAddress() {
        // TODO: test OrganizationAddress
    }

    /**
     * Test the property 'createdBy'
     */
    @Test
    public void createdByTest() {
        // TODO: test createdBy
    }

    /**
     * Test the property 'createdAtUtc'
     */
    @Test
    public void createdAtUtcTest() {
        // TODO: test createdAtUtc
    }

    /**
     * Test the property 'updatedBy'
     */
    @Test
    public void updatedByTest() {
        // TODO: test updatedBy
    }

    /**
     * Test the property 'updatedAtUtc'
     */
    @Test
    public void updatedAtUtcTest() {
        // TODO: test updatedAtUtc
    }

    /**
     * Test the property 'createdByUser'
     */
    @Test
    public void createdByUserTest() {
        // TODO: test createdByUser
    }

    /**
     * Test the property 'updatedByUser'
     */
    @Test
    public void updatedByUserTest() {
        // TODO: test updatedByUser
    }

    /**
     * Test the property 'deletedBy'
     */
    @Test
    public void deletedByTest() {
        // TODO: test deletedBy
    }

    /**
     * Test the property 'deletedAtUtc'
     */
    @Test
    public void deletedAtUtcTest() {
        // TODO: test deletedAtUtc
    }

    /**
     * Test the property 'deletedByUser'
     */
    @Test
    public void deletedByUserTest() {
        // TODO: test deletedByUser
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'organizationId'
     */
    @Test
    public void organizationIdTest() {
        // TODO: test organizationId
    }

    /**
     * Test the property 'organizationName'
     */
    @Test
    public void organizationNameTest() {
        // TODO: test organizationName
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'addressLine1'
     */
    @Test
    public void addressLine1Test() {
        // TODO: test addressLine1
    }

    /**
     * Test the property 'addressLine2'
     */
    @Test
    public void addressLine2Test() {
        // TODO: test addressLine2
    }

    /**
     * Test the property 'landMark'
     */
    @Test
    public void landMarkTest() {
        // TODO: test landMark
    }

    /**
     * Test the property 'countryId'
     */
    @Test
    public void countryIdTest() {
        // TODO: test countryId
    }

    /**
     * Test the property 'stateId'
     */
    @Test
    public void stateIdTest() {
        // TODO: test stateId
    }

    /**
     * Test the property 'city'
     */
    @Test
    public void cityTest() {
        // TODO: test city
    }

    /**
     * Test the property 'postCode'
     */
    @Test
    public void postCodeTest() {
        // TODO: test postCode
    }

    /**
     * Test the property 'proofDocumentType'
     */
    @Test
    public void proofDocumentTypeTest() {
        // TODO: test proofDocumentType
    }

    /**
     * Test the property 'proofDocumentUrl'
     */
    @Test
    public void proofDocumentUrlTest() {
        // TODO: test proofDocumentUrl
    }

    /**
     * Test the property 'country'
     */
    @Test
    public void countryTest() {
        // TODO: test country
    }

    /**
     * Test the property 'organization'
     */
    @Test
    public void organizationTest() {
        // TODO: test organization
    }

    /**
     * Test the property 'countryState'
     */
    @Test
    public void countryStateTest() {
        // TODO: test countryState
    }

    /**
     * Test the property 'isPrimary'
     */
    @Test
    public void isPrimaryTest() {
        // TODO: test isPrimary
    }

    /**
     * Test the property 'isVerified'
     */
    @Test
    public void isVerifiedTest() {
        // TODO: test isVerified
    }

}
