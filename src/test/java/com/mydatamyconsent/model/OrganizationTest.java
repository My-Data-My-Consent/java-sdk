/*
 * My Data My Consent - Developer API
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mydatamyconsent.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mydatamyconsent.model.ApplicationUser;
import com.mydatamyconsent.model.Country;
import com.mydatamyconsent.model.DocumentProviderCategory;
import com.mydatamyconsent.model.OrganizationAddress;
import com.mydatamyconsent.model.OrganizationCategory;
import com.mydatamyconsent.model.OrganizationFinancialAccount;
import com.mydatamyconsent.model.OrganizationKyoDocument;
import com.mydatamyconsent.model.OrganizationMetaData;
import com.mydatamyconsent.model.OrganizationStatus;
import com.mydatamyconsent.model.OrganizationType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Organization
 */
public class OrganizationTest {
    private final Organization model = new Organization();

    /**
     * Model tests for Organization
     */
    @Test
    public void testOrganization() {
        // TODO: test Organization
    }

    /**
     * Test the property 'createdBy'
     */
    @Test
    public void createdByTest() {
        // TODO: test createdBy
    }

    /**
     * Test the property 'createdAtUtc'
     */
    @Test
    public void createdAtUtcTest() {
        // TODO: test createdAtUtc
    }

    /**
     * Test the property 'updatedBy'
     */
    @Test
    public void updatedByTest() {
        // TODO: test updatedBy
    }

    /**
     * Test the property 'updatedAtUtc'
     */
    @Test
    public void updatedAtUtcTest() {
        // TODO: test updatedAtUtc
    }

    /**
     * Test the property 'createdByUser'
     */
    @Test
    public void createdByUserTest() {
        // TODO: test createdByUser
    }

    /**
     * Test the property 'updatedByUser'
     */
    @Test
    public void updatedByUserTest() {
        // TODO: test updatedByUser
    }

    /**
     * Test the property 'deletedBy'
     */
    @Test
    public void deletedByTest() {
        // TODO: test deletedBy
    }

    /**
     * Test the property 'deletedAtUtc'
     */
    @Test
    public void deletedAtUtcTest() {
        // TODO: test deletedAtUtc
    }

    /**
     * Test the property 'deletedByUser'
     */
    @Test
    public void deletedByUserTest() {
        // TODO: test deletedByUser
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'dataPartnerId'
     */
    @Test
    public void dataPartnerIdTest() {
        // TODO: test dataPartnerId
    }

    /**
     * Test the property 'typeId'
     */
    @Test
    public void typeIdTest() {
        // TODO: test typeId
    }

    /**
     * Test the property 'categoryId'
     */
    @Test
    public void categoryIdTest() {
        // TODO: test categoryId
    }

    /**
     * Test the property 'documentProviderCategoryId'
     */
    @Test
    public void documentProviderCategoryIdTest() {
        // TODO: test documentProviderCategoryId
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'regulatorName'
     */
    @Test
    public void regulatorNameTest() {
        // TODO: test regulatorName
    }

    /**
     * Test the property 'brandName'
     */
    @Test
    public void brandNameTest() {
        // TODO: test brandName
    }

    /**
     * Test the property 'authorizedPersonnelTaxId'
     */
    @Test
    public void authorizedPersonnelTaxIdTest() {
        // TODO: test authorizedPersonnelTaxId
    }

    /**
     * Test the property 'authorizedPersonnelName'
     */
    @Test
    public void authorizedPersonnelNameTest() {
        // TODO: test authorizedPersonnelName
    }

    /**
     * Test the property 'registrationId'
     */
    @Test
    public void registrationIdTest() {
        // TODO: test registrationId
    }

    /**
     * Test the property 'vatId'
     */
    @Test
    public void vatIdTest() {
        // TODO: test vatId
    }

    /**
     * Test the property 'taxId'
     */
    @Test
    public void taxIdTest() {
        // TODO: test taxId
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'logoUrl'
     */
    @Test
    public void logoUrlTest() {
        // TODO: test logoUrl
    }

    /**
     * Test the property 'contactEmail'
     */
    @Test
    public void contactEmailTest() {
        // TODO: test contactEmail
    }

    /**
     * Test the property 'phoneNumber'
     */
    @Test
    public void phoneNumberTest() {
        // TODO: test phoneNumber
    }

    /**
     * Test the property 'countryId'
     */
    @Test
    public void countryIdTest() {
        // TODO: test countryId
    }

    /**
     * Test the property 'stateId'
     */
    @Test
    public void stateIdTest() {
        // TODO: test stateId
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'companyCode'
     */
    @Test
    public void companyCodeTest() {
        // TODO: test companyCode
    }

    /**
     * Test the property 'privacyPolicyUrl'
     */
    @Test
    public void privacyPolicyUrlTest() {
        // TODO: test privacyPolicyUrl
    }

    /**
     * Test the property 'termsOfServiceUrl'
     */
    @Test
    public void termsOfServiceUrlTest() {
        // TODO: test termsOfServiceUrl
    }

    /**
     * Test the property 'websiteUrl'
     */
    @Test
    public void websiteUrlTest() {
        // TODO: test websiteUrl
    }

    /**
     * Test the property 'isGovernmentOrganization'
     */
    @Test
    public void isGovernmentOrganizationTest() {
        // TODO: test isGovernmentOrganization
    }

    /**
     * Test the property 'dlApiKey'
     */
    @Test
    public void dlApiKeyTest() {
        // TODO: test dlApiKey
    }

    /**
     * Test the property 'isKyoCompleted'
     */
    @Test
    public void isKyoCompletedTest() {
        // TODO: test isKyoCompleted
    }

    /**
     * Test the property 'isEnabled'
     */
    @Test
    public void isEnabledTest() {
        // TODO: test isEnabled
    }

    /**
     * Test the property 'isDataProvider'
     */
    @Test
    public void isDataProviderTest() {
        // TODO: test isDataProvider
    }

    /**
     * Test the property 'isDataConsumer'
     */
    @Test
    public void isDataConsumerTest() {
        // TODO: test isDataConsumer
    }

    /**
     * Test the property 'submittedAtUtc'
     */
    @Test
    public void submittedAtUtcTest() {
        // TODO: test submittedAtUtc
    }

    /**
     * Test the property 'approvedBy'
     */
    @Test
    public void approvedByTest() {
        // TODO: test approvedBy
    }

    /**
     * Test the property 'approvedAtUtc'
     */
    @Test
    public void approvedAtUtcTest() {
        // TODO: test approvedAtUtc
    }

    /**
     * Test the property 'isDigiLockerOrganization'
     */
    @Test
    public void isDigiLockerOrganizationTest() {
        // TODO: test isDigiLockerOrganization
    }

    /**
     * Test the property 'isMdmcMaintained'
     */
    @Test
    public void isMdmcMaintainedTest() {
        // TODO: test isMdmcMaintained
    }

    /**
     * Test the property 'isBbps'
     */
    @Test
    public void isBbpsTest() {
        // TODO: test isBbps
    }

    /**
     * Test the property 'metaData'
     */
    @Test
    public void metaDataTest() {
        // TODO: test metaData
    }

    /**
     * Test the property 'countryCode'
     */
    @Test
    public void countryCodeTest() {
        // TODO: test countryCode
    }

    /**
     * Test the property 'organizationType'
     */
    @Test
    public void organizationTypeTest() {
        // TODO: test organizationType
    }

    /**
     * Test the property 'organizationCategory'
     */
    @Test
    public void organizationCategoryTest() {
        // TODO: test organizationCategory
    }

    /**
     * Test the property 'documentProviderCategory'
     */
    @Test
    public void documentProviderCategoryTest() {
        // TODO: test documentProviderCategory
    }

    /**
     * Test the property 'addresses'
     */
    @Test
    public void addressesTest() {
        // TODO: test addresses
    }

    /**
     * Test the property 'financialAccounts'
     */
    @Test
    public void financialAccountsTest() {
        // TODO: test financialAccounts
    }

    /**
     * Test the property 'countryState'
     */
    @Test
    public void countryStateTest() {
        // TODO: test countryState
    }

    /**
     * Test the property 'approvedByUser'
     */
    @Test
    public void approvedByUserTest() {
        // TODO: test approvedByUser
    }

    /**
     * Test the property 'kyoDocuments'
     */
    @Test
    public void kyoDocumentsTest() {
        // TODO: test kyoDocuments
    }

    /**
     * Test the property 'isDelete'
     */
    @Test
    public void isDeleteTest() {
        // TODO: test isDelete
    }

    /**
     * Test the property 'recoveryToken'
     */
    @Test
    public void recoveryTokenTest() {
        // TODO: test recoveryToken
    }

}
