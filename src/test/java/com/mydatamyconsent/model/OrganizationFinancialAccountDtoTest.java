/*
 * My Data My Consent - Developer API
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mydatamyconsent.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mydatamyconsent.model.BankAccountType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for OrganizationFinancialAccountDto
 */
public class OrganizationFinancialAccountDtoTest {
    private final OrganizationFinancialAccountDto model = new OrganizationFinancialAccountDto();

    /**
     * Model tests for OrganizationFinancialAccountDto
     */
    @Test
    public void testOrganizationFinancialAccountDto() {
        // TODO: test OrganizationFinancialAccountDto
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'organizationId'
     */
    @Test
    public void organizationIdTest() {
        // TODO: test organizationId
    }

    /**
     * Test the property 'organizationName'
     */
    @Test
    public void organizationNameTest() {
        // TODO: test organizationName
    }

    /**
     * Test the property 'beneficiaryName'
     */
    @Test
    public void beneficiaryNameTest() {
        // TODO: test beneficiaryName
    }

    /**
     * Test the property 'accountNumber'
     */
    @Test
    public void accountNumberTest() {
        // TODO: test accountNumber
    }

    /**
     * Test the property 'routingNumber'
     */
    @Test
    public void routingNumberTest() {
        // TODO: test routingNumber
    }

    /**
     * Test the property 'isPrimary'
     */
    @Test
    public void isPrimaryTest() {
        // TODO: test isPrimary
    }

    /**
     * Test the property 'isVerified'
     */
    @Test
    public void isVerifiedTest() {
        // TODO: test isVerified
    }

    /**
     * Test the property 'logoUrl'
     */
    @Test
    public void logoUrlTest() {
        // TODO: test logoUrl
    }

    /**
     * Test the property 'bankName'
     */
    @Test
    public void bankNameTest() {
        // TODO: test bankName
    }

    /**
     * Test the property 'bankAccountType'
     */
    @Test
    public void bankAccountTypeTest() {
        // TODO: test bankAccountType
    }

    /**
     * Test the property 'bankAccountProofUrl'
     */
    @Test
    public void bankAccountProofUrlTest() {
        // TODO: test bankAccountProofUrl
    }

}
