/*
 * My Data My Consent - Developer API
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mydatamyconsent.api;

import com.mydatamyconsent.ApiException;
import com.mydatamyconsent.model.CreateDataProcessingAgreementRequestModel;
import com.mydatamyconsent.model.DataProcessingAgreementDto;
import com.mydatamyconsent.model.DataProcessingAgreementDtoPaginatedList;
import java.util.UUID;
import com.mydatamyconsent.model.UpdateDataProcessingAgreementRequestModel;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DataProcessingAgreementsApi
 */
@Ignore
public class DataProcessingAgreementsApiTest {

    private final DataProcessingAgreementsApi api = new DataProcessingAgreementsApi();

    
    /**
     * Create a data processing agreement.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createDataProcessingAgreementTest() throws ApiException {
        CreateDataProcessingAgreementRequestModel createDataProcessingAgreementRequestModel = null;
                DataProcessingAgreementDto response = api.createDataProcessingAgreement(createDataProcessingAgreementRequestModel);
        // TODO: test validations
    }
    
    /**
     * Delete a data processing agreement. This will not delete a published or a agreement in use with consents.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDataProcessingAgreementByIdTest() throws ApiException {
        UUID id = null;
                api.deleteDataProcessingAgreementById(id);
        // TODO: test validations
    }
    
    /**
     * Get data processing agreement by id.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDataProcessingAgreementByIdTest() throws ApiException {
        UUID id = null;
                DataProcessingAgreementDto response = api.getDataProcessingAgreementById(id);
        // TODO: test validations
    }
    
    /**
     * Get all data processing agreements.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDataProcessingAgreementsTest() throws ApiException {
        Integer pageNo = null;
        Integer pageSize = null;
                DataProcessingAgreementDtoPaginatedList response = api.getDataProcessingAgreements(pageNo, pageSize);
        // TODO: test validations
    }
    
    /**
     * Terminate a data processing agreement.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void terminateDataProcessingAgreementByIdTest() throws ApiException {
        UUID id = null;
                api.terminateDataProcessingAgreementById(id);
        // TODO: test validations
    }
    
    /**
     * Update a data processing agreement.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateDataProcessingAgreementTest() throws ApiException {
        UUID id = null;
        UpdateDataProcessingAgreementRequestModel updateDataProcessingAgreementRequestModel = null;
                DataProcessingAgreementDto response = api.updateDataProcessingAgreement(id, updateDataProcessingAgreementRequestModel);
        // TODO: test validations
    }
    
}
