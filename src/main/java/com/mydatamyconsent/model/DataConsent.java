/*
 * My Data My Consent - Developer API
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mydatamyconsent.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mydatamyconsent.model.ApplicationUser;
import com.mydatamyconsent.model.DataConsentIdentifier;
import com.mydatamyconsent.model.DataConsentRequestedDocument;
import com.mydatamyconsent.model.DataConsentRequestedFinancialAccount;
import com.mydatamyconsent.model.DataConsentStatus;
import com.mydatamyconsent.model.DataFetchFrequencyUnit;
import com.mydatamyconsent.model.DataFetchType;
import com.mydatamyconsent.model.DataLifeUnit;
import com.mydatamyconsent.model.DataProcessingAgreement;
import com.mydatamyconsent.model.IdentityClaim;
import com.mydatamyconsent.model.Organization;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import org.threeten.bp.OffsetDateTime;

/**
 * DataConsent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-26T11:36:08.780773+05:30[Asia/Kolkata]")
public class DataConsent {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private UUID userId;

  public static final String SERIALIZED_NAME_ORGANIZATION_ID = "organizationId";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_ID)
  private UUID organizationId;

  public static final String SERIALIZED_NAME_REQUESTED_BY_ORG_ID = "requestedByOrgId";
  @SerializedName(SERIALIZED_NAME_REQUESTED_BY_ORG_ID)
  private UUID requestedByOrgId;

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transactionId";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private String transactionId;

  public static final String SERIALIZED_NAME_START_DATE_TIME = "startDateTime";
  @SerializedName(SERIALIZED_NAME_START_DATE_TIME)
  private OffsetDateTime startDateTime;

  public static final String SERIALIZED_NAME_EXPIRY_DATE_TIME = "expiryDateTime";
  @SerializedName(SERIALIZED_NAME_EXPIRY_DATE_TIME)
  private OffsetDateTime expiryDateTime;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_PURPOSE_CODE = "purposeCode";
  @SerializedName(SERIALIZED_NAME_PURPOSE_CODE)
  private String purposeCode;

  public static final String SERIALIZED_NAME_PURPOSE_LINK = "purposeLink";
  @SerializedName(SERIALIZED_NAME_PURPOSE_LINK)
  private String purposeLink;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_AGREEMENT_ID = "agreementId";
  @SerializedName(SERIALIZED_NAME_AGREEMENT_ID)
  private UUID agreementId;

  public static final String SERIALIZED_NAME_DATA_LIFE_UNIT = "dataLifeUnit";
  @SerializedName(SERIALIZED_NAME_DATA_LIFE_UNIT)
  private DataLifeUnit dataLifeUnit;

  public static final String SERIALIZED_NAME_DATA_LIFE_VALUE = "dataLifeValue";
  @SerializedName(SERIALIZED_NAME_DATA_LIFE_VALUE)
  private Integer dataLifeValue;

  public static final String SERIALIZED_NAME_DATA_FETCH_FREQUENCY_UNIT = "dataFetchFrequencyUnit";
  @SerializedName(SERIALIZED_NAME_DATA_FETCH_FREQUENCY_UNIT)
  private DataFetchFrequencyUnit dataFetchFrequencyUnit;

  public static final String SERIALIZED_NAME_DATA_FETCH_FREQUENCY_UNIT_VALUE = "dataFetchFrequencyUnitValue";
  @SerializedName(SERIALIZED_NAME_DATA_FETCH_FREQUENCY_UNIT_VALUE)
  private Integer dataFetchFrequencyUnitValue;

  public static final String SERIALIZED_NAME_DATA_FETCH_TYPE = "dataFetchType";
  @SerializedName(SERIALIZED_NAME_DATA_FETCH_TYPE)
  private DataFetchType dataFetchType;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private DataConsentStatus status;

  public static final String SERIALIZED_NAME_CREATED_AT_UTC = "createdAtUtc";
  @SerializedName(SERIALIZED_NAME_CREATED_AT_UTC)
  private OffsetDateTime createdAtUtc;

  public static final String SERIALIZED_NAME_APPROVED_AT_UTC = "approvedAtUtc";
  @SerializedName(SERIALIZED_NAME_APPROVED_AT_UTC)
  private OffsetDateTime approvedAtUtc;

  public static final String SERIALIZED_NAME_REJECTED_AT_UTC = "rejectedAtUtc";
  @SerializedName(SERIALIZED_NAME_REJECTED_AT_UTC)
  private OffsetDateTime rejectedAtUtc;

  public static final String SERIALIZED_NAME_USER = "user";
  @SerializedName(SERIALIZED_NAME_USER)
  private ApplicationUser user;

  public static final String SERIALIZED_NAME_ORGANIZATION = "organization";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION)
  private Organization organization;

  public static final String SERIALIZED_NAME_REQUESTED_BY_ORG = "requestedByOrg";
  @SerializedName(SERIALIZED_NAME_REQUESTED_BY_ORG)
  private Organization requestedByOrg;

  public static final String SERIALIZED_NAME_AGREEMENT = "agreement";
  @SerializedName(SERIALIZED_NAME_AGREEMENT)
  private DataProcessingAgreement agreement;

  public static final String SERIALIZED_NAME_IDENTITY_CLAIMS = "identityClaims";
  @SerializedName(SERIALIZED_NAME_IDENTITY_CLAIMS)
  private List<IdentityClaim> identityClaims = null;

  public static final String SERIALIZED_NAME_IDENTIFIERS = "identifiers";
  @SerializedName(SERIALIZED_NAME_IDENTIFIERS)
  private List<DataConsentIdentifier> identifiers = null;

  public static final String SERIALIZED_NAME_REQUESTED_FINANCIAL_ACCOUNTS = "requestedFinancialAccounts";
  @SerializedName(SERIALIZED_NAME_REQUESTED_FINANCIAL_ACCOUNTS)
  private List<DataConsentRequestedFinancialAccount> requestedFinancialAccounts = null;

  public static final String SERIALIZED_NAME_REQUESTED_DOCUMENTS = "requestedDocuments";
  @SerializedName(SERIALIZED_NAME_REQUESTED_DOCUMENTS)
  private List<DataConsentRequestedDocument> requestedDocuments = null;


  public DataConsent id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    this.id = id;
  }


  public DataConsent userId(UUID userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getUserId() {
    return userId;
  }


  public void setUserId(UUID userId) {
    this.userId = userId;
  }


  public DataConsent organizationId(UUID organizationId) {
    
    this.organizationId = organizationId;
    return this;
  }

   /**
   * Get organizationId
   * @return organizationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getOrganizationId() {
    return organizationId;
  }


  public void setOrganizationId(UUID organizationId) {
    this.organizationId = organizationId;
  }


  public DataConsent requestedByOrgId(UUID requestedByOrgId) {
    
    this.requestedByOrgId = requestedByOrgId;
    return this;
  }

   /**
   * Get requestedByOrgId
   * @return requestedByOrgId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getRequestedByOrgId() {
    return requestedByOrgId;
  }


  public void setRequestedByOrgId(UUID requestedByOrgId) {
    this.requestedByOrgId = requestedByOrgId;
  }


  public DataConsent transactionId(String transactionId) {
    
    this.transactionId = transactionId;
    return this;
  }

   /**
   * Get transactionId
   * @return transactionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTransactionId() {
    return transactionId;
  }


  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }


  public DataConsent startDateTime(OffsetDateTime startDateTime) {
    
    this.startDateTime = startDateTime;
    return this;
  }

   /**
   * Get startDateTime
   * @return startDateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getStartDateTime() {
    return startDateTime;
  }


  public void setStartDateTime(OffsetDateTime startDateTime) {
    this.startDateTime = startDateTime;
  }


  public DataConsent expiryDateTime(OffsetDateTime expiryDateTime) {
    
    this.expiryDateTime = expiryDateTime;
    return this;
  }

   /**
   * Get expiryDateTime
   * @return expiryDateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getExpiryDateTime() {
    return expiryDateTime;
  }


  public void setExpiryDateTime(OffsetDateTime expiryDateTime) {
    this.expiryDateTime = expiryDateTime;
  }


  public DataConsent description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public DataConsent purposeCode(String purposeCode) {
    
    this.purposeCode = purposeCode;
    return this;
  }

   /**
   * Get purposeCode
   * @return purposeCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPurposeCode() {
    return purposeCode;
  }


  public void setPurposeCode(String purposeCode) {
    this.purposeCode = purposeCode;
  }


  public DataConsent purposeLink(String purposeLink) {
    
    this.purposeLink = purposeLink;
    return this;
  }

   /**
   * Get purposeLink
   * @return purposeLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPurposeLink() {
    return purposeLink;
  }


  public void setPurposeLink(String purposeLink) {
    this.purposeLink = purposeLink;
  }


  public DataConsent location(String location) {
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocation() {
    return location;
  }


  public void setLocation(String location) {
    this.location = location;
  }


  public DataConsent agreementId(UUID agreementId) {
    
    this.agreementId = agreementId;
    return this;
  }

   /**
   * Get agreementId
   * @return agreementId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getAgreementId() {
    return agreementId;
  }


  public void setAgreementId(UUID agreementId) {
    this.agreementId = agreementId;
  }


  public DataConsent dataLifeUnit(DataLifeUnit dataLifeUnit) {
    
    this.dataLifeUnit = dataLifeUnit;
    return this;
  }

   /**
   * Get dataLifeUnit
   * @return dataLifeUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DataLifeUnit getDataLifeUnit() {
    return dataLifeUnit;
  }


  public void setDataLifeUnit(DataLifeUnit dataLifeUnit) {
    this.dataLifeUnit = dataLifeUnit;
  }


  public DataConsent dataLifeValue(Integer dataLifeValue) {
    
    this.dataLifeValue = dataLifeValue;
    return this;
  }

   /**
   * Get dataLifeValue
   * @return dataLifeValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDataLifeValue() {
    return dataLifeValue;
  }


  public void setDataLifeValue(Integer dataLifeValue) {
    this.dataLifeValue = dataLifeValue;
  }


  public DataConsent dataFetchFrequencyUnit(DataFetchFrequencyUnit dataFetchFrequencyUnit) {
    
    this.dataFetchFrequencyUnit = dataFetchFrequencyUnit;
    return this;
  }

   /**
   * Get dataFetchFrequencyUnit
   * @return dataFetchFrequencyUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DataFetchFrequencyUnit getDataFetchFrequencyUnit() {
    return dataFetchFrequencyUnit;
  }


  public void setDataFetchFrequencyUnit(DataFetchFrequencyUnit dataFetchFrequencyUnit) {
    this.dataFetchFrequencyUnit = dataFetchFrequencyUnit;
  }


  public DataConsent dataFetchFrequencyUnitValue(Integer dataFetchFrequencyUnitValue) {
    
    this.dataFetchFrequencyUnitValue = dataFetchFrequencyUnitValue;
    return this;
  }

   /**
   * Get dataFetchFrequencyUnitValue
   * @return dataFetchFrequencyUnitValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDataFetchFrequencyUnitValue() {
    return dataFetchFrequencyUnitValue;
  }


  public void setDataFetchFrequencyUnitValue(Integer dataFetchFrequencyUnitValue) {
    this.dataFetchFrequencyUnitValue = dataFetchFrequencyUnitValue;
  }


  public DataConsent dataFetchType(DataFetchType dataFetchType) {
    
    this.dataFetchType = dataFetchType;
    return this;
  }

   /**
   * Get dataFetchType
   * @return dataFetchType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DataFetchType getDataFetchType() {
    return dataFetchType;
  }


  public void setDataFetchType(DataFetchType dataFetchType) {
    this.dataFetchType = dataFetchType;
  }


  public DataConsent status(DataConsentStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DataConsentStatus getStatus() {
    return status;
  }


  public void setStatus(DataConsentStatus status) {
    this.status = status;
  }


  public DataConsent createdAtUtc(OffsetDateTime createdAtUtc) {
    
    this.createdAtUtc = createdAtUtc;
    return this;
  }

   /**
   * Get createdAtUtc
   * @return createdAtUtc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCreatedAtUtc() {
    return createdAtUtc;
  }


  public void setCreatedAtUtc(OffsetDateTime createdAtUtc) {
    this.createdAtUtc = createdAtUtc;
  }


  public DataConsent approvedAtUtc(OffsetDateTime approvedAtUtc) {
    
    this.approvedAtUtc = approvedAtUtc;
    return this;
  }

   /**
   * Get approvedAtUtc
   * @return approvedAtUtc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getApprovedAtUtc() {
    return approvedAtUtc;
  }


  public void setApprovedAtUtc(OffsetDateTime approvedAtUtc) {
    this.approvedAtUtc = approvedAtUtc;
  }


  public DataConsent rejectedAtUtc(OffsetDateTime rejectedAtUtc) {
    
    this.rejectedAtUtc = rejectedAtUtc;
    return this;
  }

   /**
   * Get rejectedAtUtc
   * @return rejectedAtUtc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getRejectedAtUtc() {
    return rejectedAtUtc;
  }


  public void setRejectedAtUtc(OffsetDateTime rejectedAtUtc) {
    this.rejectedAtUtc = rejectedAtUtc;
  }


  public DataConsent user(ApplicationUser user) {
    
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ApplicationUser getUser() {
    return user;
  }


  public void setUser(ApplicationUser user) {
    this.user = user;
  }


  public DataConsent organization(Organization organization) {
    
    this.organization = organization;
    return this;
  }

   /**
   * Get organization
   * @return organization
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Organization getOrganization() {
    return organization;
  }


  public void setOrganization(Organization organization) {
    this.organization = organization;
  }


  public DataConsent requestedByOrg(Organization requestedByOrg) {
    
    this.requestedByOrg = requestedByOrg;
    return this;
  }

   /**
   * Get requestedByOrg
   * @return requestedByOrg
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Organization getRequestedByOrg() {
    return requestedByOrg;
  }


  public void setRequestedByOrg(Organization requestedByOrg) {
    this.requestedByOrg = requestedByOrg;
  }


  public DataConsent agreement(DataProcessingAgreement agreement) {
    
    this.agreement = agreement;
    return this;
  }

   /**
   * Get agreement
   * @return agreement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DataProcessingAgreement getAgreement() {
    return agreement;
  }


  public void setAgreement(DataProcessingAgreement agreement) {
    this.agreement = agreement;
  }


  public DataConsent identityClaims(List<IdentityClaim> identityClaims) {
    
    this.identityClaims = identityClaims;
    return this;
  }

  public DataConsent addIdentityClaimsItem(IdentityClaim identityClaimsItem) {
    if (this.identityClaims == null) {
      this.identityClaims = new ArrayList<IdentityClaim>();
    }
    this.identityClaims.add(identityClaimsItem);
    return this;
  }

   /**
   * Get identityClaims
   * @return identityClaims
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<IdentityClaim> getIdentityClaims() {
    return identityClaims;
  }


  public void setIdentityClaims(List<IdentityClaim> identityClaims) {
    this.identityClaims = identityClaims;
  }


  public DataConsent identifiers(List<DataConsentIdentifier> identifiers) {
    
    this.identifiers = identifiers;
    return this;
  }

  public DataConsent addIdentifiersItem(DataConsentIdentifier identifiersItem) {
    if (this.identifiers == null) {
      this.identifiers = new ArrayList<DataConsentIdentifier>();
    }
    this.identifiers.add(identifiersItem);
    return this;
  }

   /**
   * Get identifiers
   * @return identifiers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<DataConsentIdentifier> getIdentifiers() {
    return identifiers;
  }


  public void setIdentifiers(List<DataConsentIdentifier> identifiers) {
    this.identifiers = identifiers;
  }


  public DataConsent requestedFinancialAccounts(List<DataConsentRequestedFinancialAccount> requestedFinancialAccounts) {
    
    this.requestedFinancialAccounts = requestedFinancialAccounts;
    return this;
  }

  public DataConsent addRequestedFinancialAccountsItem(DataConsentRequestedFinancialAccount requestedFinancialAccountsItem) {
    if (this.requestedFinancialAccounts == null) {
      this.requestedFinancialAccounts = new ArrayList<DataConsentRequestedFinancialAccount>();
    }
    this.requestedFinancialAccounts.add(requestedFinancialAccountsItem);
    return this;
  }

   /**
   * Get requestedFinancialAccounts
   * @return requestedFinancialAccounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<DataConsentRequestedFinancialAccount> getRequestedFinancialAccounts() {
    return requestedFinancialAccounts;
  }


  public void setRequestedFinancialAccounts(List<DataConsentRequestedFinancialAccount> requestedFinancialAccounts) {
    this.requestedFinancialAccounts = requestedFinancialAccounts;
  }


  public DataConsent requestedDocuments(List<DataConsentRequestedDocument> requestedDocuments) {
    
    this.requestedDocuments = requestedDocuments;
    return this;
  }

  public DataConsent addRequestedDocumentsItem(DataConsentRequestedDocument requestedDocumentsItem) {
    if (this.requestedDocuments == null) {
      this.requestedDocuments = new ArrayList<DataConsentRequestedDocument>();
    }
    this.requestedDocuments.add(requestedDocumentsItem);
    return this;
  }

   /**
   * Get requestedDocuments
   * @return requestedDocuments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<DataConsentRequestedDocument> getRequestedDocuments() {
    return requestedDocuments;
  }


  public void setRequestedDocuments(List<DataConsentRequestedDocument> requestedDocuments) {
    this.requestedDocuments = requestedDocuments;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataConsent dataConsent = (DataConsent) o;
    return Objects.equals(this.id, dataConsent.id) &&
        Objects.equals(this.userId, dataConsent.userId) &&
        Objects.equals(this.organizationId, dataConsent.organizationId) &&
        Objects.equals(this.requestedByOrgId, dataConsent.requestedByOrgId) &&
        Objects.equals(this.transactionId, dataConsent.transactionId) &&
        Objects.equals(this.startDateTime, dataConsent.startDateTime) &&
        Objects.equals(this.expiryDateTime, dataConsent.expiryDateTime) &&
        Objects.equals(this.description, dataConsent.description) &&
        Objects.equals(this.purposeCode, dataConsent.purposeCode) &&
        Objects.equals(this.purposeLink, dataConsent.purposeLink) &&
        Objects.equals(this.location, dataConsent.location) &&
        Objects.equals(this.agreementId, dataConsent.agreementId) &&
        Objects.equals(this.dataLifeUnit, dataConsent.dataLifeUnit) &&
        Objects.equals(this.dataLifeValue, dataConsent.dataLifeValue) &&
        Objects.equals(this.dataFetchFrequencyUnit, dataConsent.dataFetchFrequencyUnit) &&
        Objects.equals(this.dataFetchFrequencyUnitValue, dataConsent.dataFetchFrequencyUnitValue) &&
        Objects.equals(this.dataFetchType, dataConsent.dataFetchType) &&
        Objects.equals(this.status, dataConsent.status) &&
        Objects.equals(this.createdAtUtc, dataConsent.createdAtUtc) &&
        Objects.equals(this.approvedAtUtc, dataConsent.approvedAtUtc) &&
        Objects.equals(this.rejectedAtUtc, dataConsent.rejectedAtUtc) &&
        Objects.equals(this.user, dataConsent.user) &&
        Objects.equals(this.organization, dataConsent.organization) &&
        Objects.equals(this.requestedByOrg, dataConsent.requestedByOrg) &&
        Objects.equals(this.agreement, dataConsent.agreement) &&
        Objects.equals(this.identityClaims, dataConsent.identityClaims) &&
        Objects.equals(this.identifiers, dataConsent.identifiers) &&
        Objects.equals(this.requestedFinancialAccounts, dataConsent.requestedFinancialAccounts) &&
        Objects.equals(this.requestedDocuments, dataConsent.requestedDocuments);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && a.get().getClass().isArray() ? Arrays.equals((T[])a.get(), (T[])b.get()) : Objects.equals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, userId, organizationId, requestedByOrgId, transactionId, startDateTime, expiryDateTime, description, purposeCode, purposeLink, location, agreementId, dataLifeUnit, dataLifeValue, dataFetchFrequencyUnit, dataFetchFrequencyUnitValue, dataFetchType, status, createdAtUtc, approvedAtUtc, rejectedAtUtc, user, organization, requestedByOrg, agreement, identityClaims, identifiers, requestedFinancialAccounts, requestedDocuments);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent()
      ? (a.get().getClass().isArray() ? Arrays.hashCode((T[])a.get()) : Objects.hashCode(a.get()))
      : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataConsent {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    requestedByOrgId: ").append(toIndentedString(requestedByOrgId)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    startDateTime: ").append(toIndentedString(startDateTime)).append("\n");
    sb.append("    expiryDateTime: ").append(toIndentedString(expiryDateTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    purposeCode: ").append(toIndentedString(purposeCode)).append("\n");
    sb.append("    purposeLink: ").append(toIndentedString(purposeLink)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    agreementId: ").append(toIndentedString(agreementId)).append("\n");
    sb.append("    dataLifeUnit: ").append(toIndentedString(dataLifeUnit)).append("\n");
    sb.append("    dataLifeValue: ").append(toIndentedString(dataLifeValue)).append("\n");
    sb.append("    dataFetchFrequencyUnit: ").append(toIndentedString(dataFetchFrequencyUnit)).append("\n");
    sb.append("    dataFetchFrequencyUnitValue: ").append(toIndentedString(dataFetchFrequencyUnitValue)).append("\n");
    sb.append("    dataFetchType: ").append(toIndentedString(dataFetchType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    createdAtUtc: ").append(toIndentedString(createdAtUtc)).append("\n");
    sb.append("    approvedAtUtc: ").append(toIndentedString(approvedAtUtc)).append("\n");
    sb.append("    rejectedAtUtc: ").append(toIndentedString(rejectedAtUtc)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    requestedByOrg: ").append(toIndentedString(requestedByOrg)).append("\n");
    sb.append("    agreement: ").append(toIndentedString(agreement)).append("\n");
    sb.append("    identityClaims: ").append(toIndentedString(identityClaims)).append("\n");
    sb.append("    identifiers: ").append(toIndentedString(identifiers)).append("\n");
    sb.append("    requestedFinancialAccounts: ").append(toIndentedString(requestedFinancialAccounts)).append("\n");
    sb.append("    requestedDocuments: ").append(toIndentedString(requestedDocuments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

