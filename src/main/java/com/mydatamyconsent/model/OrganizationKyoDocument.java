/*
 * My Data My Consent - Developer API
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mydatamyconsent.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mydatamyconsent.model.ApplicationUser;
import com.mydatamyconsent.model.Organization;
import com.mydatamyconsent.model.Rejection;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import org.threeten.bp.OffsetDateTime;

/**
 * OrganizationKyoDocument
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-19T10:04:53.682265678Z[Etc/UTC]")
public class OrganizationKyoDocument {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_ORGANIZATION_ID = "organizationId";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_ID)
  private UUID organizationId;

  public static final String SERIALIZED_NAME_DOCUMENT_NAME = "documentName";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_NAME)
  private String documentName;

  public static final String SERIALIZED_NAME_STORAGE_URL = "storageUrl";
  @SerializedName(SERIALIZED_NAME_STORAGE_URL)
  private String storageUrl;

  public static final String SERIALIZED_NAME_UPLOADED_AT_UTC = "uploadedAtUtc";
  @SerializedName(SERIALIZED_NAME_UPLOADED_AT_UTC)
  private OffsetDateTime uploadedAtUtc;

  public static final String SERIALIZED_NAME_VERIFIED_BY = "verifiedBy";
  @SerializedName(SERIALIZED_NAME_VERIFIED_BY)
  private UUID verifiedBy;

  public static final String SERIALIZED_NAME_VERIFIED_AT_UTC = "verifiedAtUtc";
  @SerializedName(SERIALIZED_NAME_VERIFIED_AT_UTC)
  private OffsetDateTime verifiedAtUtc;

  public static final String SERIALIZED_NAME_DELETED_BY = "deletedBy";
  @SerializedName(SERIALIZED_NAME_DELETED_BY)
  private UUID deletedBy;

  public static final String SERIALIZED_NAME_DELETED_AT_UTC = "deletedAtUtc";
  @SerializedName(SERIALIZED_NAME_DELETED_AT_UTC)
  private OffsetDateTime deletedAtUtc;

  public static final String SERIALIZED_NAME_ORGANIZATION = "organization";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION)
  private Organization organization;

  public static final String SERIALIZED_NAME_VERIFIED_BY_USER = "verifiedByUser";
  @SerializedName(SERIALIZED_NAME_VERIFIED_BY_USER)
  private ApplicationUser verifiedByUser;

  public static final String SERIALIZED_NAME_DELETED_BY_USER = "deletedByUser";
  @SerializedName(SERIALIZED_NAME_DELETED_BY_USER)
  private ApplicationUser deletedByUser;

  public static final String SERIALIZED_NAME_REJECTION = "rejection";
  @SerializedName(SERIALIZED_NAME_REJECTION)
  private Rejection rejection;


  public OrganizationKyoDocument id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    this.id = id;
  }


  public OrganizationKyoDocument organizationId(UUID organizationId) {
    
    this.organizationId = organizationId;
    return this;
  }

   /**
   * Get organizationId
   * @return organizationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getOrganizationId() {
    return organizationId;
  }


  public void setOrganizationId(UUID organizationId) {
    this.organizationId = organizationId;
  }


  public OrganizationKyoDocument documentName(String documentName) {
    
    this.documentName = documentName;
    return this;
  }

   /**
   * Get documentName
   * @return documentName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDocumentName() {
    return documentName;
  }


  public void setDocumentName(String documentName) {
    this.documentName = documentName;
  }


  public OrganizationKyoDocument storageUrl(String storageUrl) {
    
    this.storageUrl = storageUrl;
    return this;
  }

   /**
   * Get storageUrl
   * @return storageUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStorageUrl() {
    return storageUrl;
  }


  public void setStorageUrl(String storageUrl) {
    this.storageUrl = storageUrl;
  }


  public OrganizationKyoDocument uploadedAtUtc(OffsetDateTime uploadedAtUtc) {
    
    this.uploadedAtUtc = uploadedAtUtc;
    return this;
  }

   /**
   * Get uploadedAtUtc
   * @return uploadedAtUtc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getUploadedAtUtc() {
    return uploadedAtUtc;
  }


  public void setUploadedAtUtc(OffsetDateTime uploadedAtUtc) {
    this.uploadedAtUtc = uploadedAtUtc;
  }


  public OrganizationKyoDocument verifiedBy(UUID verifiedBy) {
    
    this.verifiedBy = verifiedBy;
    return this;
  }

   /**
   * Get verifiedBy
   * @return verifiedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getVerifiedBy() {
    return verifiedBy;
  }


  public void setVerifiedBy(UUID verifiedBy) {
    this.verifiedBy = verifiedBy;
  }


  public OrganizationKyoDocument verifiedAtUtc(OffsetDateTime verifiedAtUtc) {
    
    this.verifiedAtUtc = verifiedAtUtc;
    return this;
  }

   /**
   * Get verifiedAtUtc
   * @return verifiedAtUtc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getVerifiedAtUtc() {
    return verifiedAtUtc;
  }


  public void setVerifiedAtUtc(OffsetDateTime verifiedAtUtc) {
    this.verifiedAtUtc = verifiedAtUtc;
  }


  public OrganizationKyoDocument deletedBy(UUID deletedBy) {
    
    this.deletedBy = deletedBy;
    return this;
  }

   /**
   * Get deletedBy
   * @return deletedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getDeletedBy() {
    return deletedBy;
  }


  public void setDeletedBy(UUID deletedBy) {
    this.deletedBy = deletedBy;
  }


  public OrganizationKyoDocument deletedAtUtc(OffsetDateTime deletedAtUtc) {
    
    this.deletedAtUtc = deletedAtUtc;
    return this;
  }

   /**
   * Get deletedAtUtc
   * @return deletedAtUtc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDeletedAtUtc() {
    return deletedAtUtc;
  }


  public void setDeletedAtUtc(OffsetDateTime deletedAtUtc) {
    this.deletedAtUtc = deletedAtUtc;
  }


  public OrganizationKyoDocument organization(Organization organization) {
    
    this.organization = organization;
    return this;
  }

   /**
   * Get organization
   * @return organization
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Organization getOrganization() {
    return organization;
  }


  public void setOrganization(Organization organization) {
    this.organization = organization;
  }


  public OrganizationKyoDocument verifiedByUser(ApplicationUser verifiedByUser) {
    
    this.verifiedByUser = verifiedByUser;
    return this;
  }

   /**
   * Get verifiedByUser
   * @return verifiedByUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ApplicationUser getVerifiedByUser() {
    return verifiedByUser;
  }


  public void setVerifiedByUser(ApplicationUser verifiedByUser) {
    this.verifiedByUser = verifiedByUser;
  }


  public OrganizationKyoDocument deletedByUser(ApplicationUser deletedByUser) {
    
    this.deletedByUser = deletedByUser;
    return this;
  }

   /**
   * Get deletedByUser
   * @return deletedByUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ApplicationUser getDeletedByUser() {
    return deletedByUser;
  }


  public void setDeletedByUser(ApplicationUser deletedByUser) {
    this.deletedByUser = deletedByUser;
  }


  public OrganizationKyoDocument rejection(Rejection rejection) {
    
    this.rejection = rejection;
    return this;
  }

   /**
   * Get rejection
   * @return rejection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Rejection getRejection() {
    return rejection;
  }


  public void setRejection(Rejection rejection) {
    this.rejection = rejection;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrganizationKyoDocument organizationKyoDocument = (OrganizationKyoDocument) o;
    return Objects.equals(this.id, organizationKyoDocument.id) &&
        Objects.equals(this.organizationId, organizationKyoDocument.organizationId) &&
        Objects.equals(this.documentName, organizationKyoDocument.documentName) &&
        Objects.equals(this.storageUrl, organizationKyoDocument.storageUrl) &&
        Objects.equals(this.uploadedAtUtc, organizationKyoDocument.uploadedAtUtc) &&
        Objects.equals(this.verifiedBy, organizationKyoDocument.verifiedBy) &&
        Objects.equals(this.verifiedAtUtc, organizationKyoDocument.verifiedAtUtc) &&
        Objects.equals(this.deletedBy, organizationKyoDocument.deletedBy) &&
        Objects.equals(this.deletedAtUtc, organizationKyoDocument.deletedAtUtc) &&
        Objects.equals(this.organization, organizationKyoDocument.organization) &&
        Objects.equals(this.verifiedByUser, organizationKyoDocument.verifiedByUser) &&
        Objects.equals(this.deletedByUser, organizationKyoDocument.deletedByUser) &&
        Objects.equals(this.rejection, organizationKyoDocument.rejection);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && a.get().getClass().isArray() ? Arrays.equals((T[])a.get(), (T[])b.get()) : Objects.equals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, organizationId, documentName, storageUrl, uploadedAtUtc, verifiedBy, verifiedAtUtc, deletedBy, deletedAtUtc, organization, verifiedByUser, deletedByUser, rejection);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent()
      ? (a.get().getClass().isArray() ? Arrays.hashCode((T[])a.get()) : Objects.hashCode(a.get()))
      : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrganizationKyoDocument {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    documentName: ").append(toIndentedString(documentName)).append("\n");
    sb.append("    storageUrl: ").append(toIndentedString(storageUrl)).append("\n");
    sb.append("    uploadedAtUtc: ").append(toIndentedString(uploadedAtUtc)).append("\n");
    sb.append("    verifiedBy: ").append(toIndentedString(verifiedBy)).append("\n");
    sb.append("    verifiedAtUtc: ").append(toIndentedString(verifiedAtUtc)).append("\n");
    sb.append("    deletedBy: ").append(toIndentedString(deletedBy)).append("\n");
    sb.append("    deletedAtUtc: ").append(toIndentedString(deletedAtUtc)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    verifiedByUser: ").append(toIndentedString(verifiedByUser)).append("\n");
    sb.append("    deletedByUser: ").append(toIndentedString(deletedByUser)).append("\n");
    sb.append("    rejection: ").append(toIndentedString(rejection)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

