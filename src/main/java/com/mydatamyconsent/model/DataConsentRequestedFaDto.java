/*
 * My Data My Consent - Developer API
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mydatamyconsent.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mydatamyconsent.model.DataConsentRfaFilterDto;
import com.mydatamyconsent.model.FinancialAccountTypes;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import org.threeten.bp.OffsetDateTime;

/**
 * DataConsentRequestedFaDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-19T10:04:53.682265678Z[Etc/UTC]")
public class DataConsentRequestedFaDto {
  public static final String SERIALIZED_NAME_DRN = "drn";
  @SerializedName(SERIALIZED_NAME_DRN)
  private String drn;

  public static final String SERIALIZED_NAME_FROM_DATETIME = "fromDatetime";
  @SerializedName(SERIALIZED_NAME_FROM_DATETIME)
  private OffsetDateTime fromDatetime;

  public static final String SERIALIZED_NAME_TO_DATETIME = "toDatetime";
  @SerializedName(SERIALIZED_NAME_TO_DATETIME)
  private OffsetDateTime toDatetime;

  public static final String SERIALIZED_NAME_PROVIDER_ID = "providerId";
  @SerializedName(SERIALIZED_NAME_PROVIDER_ID)
  private UUID providerId;

  public static final String SERIALIZED_NAME_ACCOUNT_TYPE = "accountType";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_TYPE)
  private FinancialAccountTypes accountType;

  public static final String SERIALIZED_NAME_ACCOUNT_IDENTIFIER = "accountIdentifier";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_IDENTIFIER)
  private String accountIdentifier;

  public static final String SERIALIZED_NAME_FILTERS = "filters";
  @SerializedName(SERIALIZED_NAME_FILTERS)
  private List<DataConsentRfaFilterDto> filters = null;


  public DataConsentRequestedFaDto drn(String drn) {
    
    this.drn = drn;
    return this;
  }

   /**
   * Get drn
   * @return drn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDrn() {
    return drn;
  }


  public void setDrn(String drn) {
    this.drn = drn;
  }


  public DataConsentRequestedFaDto fromDatetime(OffsetDateTime fromDatetime) {
    
    this.fromDatetime = fromDatetime;
    return this;
  }

   /**
   * Get fromDatetime
   * @return fromDatetime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getFromDatetime() {
    return fromDatetime;
  }


  public void setFromDatetime(OffsetDateTime fromDatetime) {
    this.fromDatetime = fromDatetime;
  }


  public DataConsentRequestedFaDto toDatetime(OffsetDateTime toDatetime) {
    
    this.toDatetime = toDatetime;
    return this;
  }

   /**
   * Get toDatetime
   * @return toDatetime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getToDatetime() {
    return toDatetime;
  }


  public void setToDatetime(OffsetDateTime toDatetime) {
    this.toDatetime = toDatetime;
  }


  public DataConsentRequestedFaDto providerId(UUID providerId) {
    
    this.providerId = providerId;
    return this;
  }

   /**
   * Get providerId
   * @return providerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getProviderId() {
    return providerId;
  }


  public void setProviderId(UUID providerId) {
    this.providerId = providerId;
  }


  public DataConsentRequestedFaDto accountType(FinancialAccountTypes accountType) {
    
    this.accountType = accountType;
    return this;
  }

   /**
   * Get accountType
   * @return accountType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FinancialAccountTypes getAccountType() {
    return accountType;
  }


  public void setAccountType(FinancialAccountTypes accountType) {
    this.accountType = accountType;
  }


  public DataConsentRequestedFaDto accountIdentifier(String accountIdentifier) {
    
    this.accountIdentifier = accountIdentifier;
    return this;
  }

   /**
   * Get accountIdentifier
   * @return accountIdentifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccountIdentifier() {
    return accountIdentifier;
  }


  public void setAccountIdentifier(String accountIdentifier) {
    this.accountIdentifier = accountIdentifier;
  }


  public DataConsentRequestedFaDto filters(List<DataConsentRfaFilterDto> filters) {
    
    this.filters = filters;
    return this;
  }

  public DataConsentRequestedFaDto addFiltersItem(DataConsentRfaFilterDto filtersItem) {
    if (this.filters == null) {
      this.filters = new ArrayList<DataConsentRfaFilterDto>();
    }
    this.filters.add(filtersItem);
    return this;
  }

   /**
   * Get filters
   * @return filters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<DataConsentRfaFilterDto> getFilters() {
    return filters;
  }


  public void setFilters(List<DataConsentRfaFilterDto> filters) {
    this.filters = filters;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataConsentRequestedFaDto dataConsentRequestedFaDto = (DataConsentRequestedFaDto) o;
    return Objects.equals(this.drn, dataConsentRequestedFaDto.drn) &&
        Objects.equals(this.fromDatetime, dataConsentRequestedFaDto.fromDatetime) &&
        Objects.equals(this.toDatetime, dataConsentRequestedFaDto.toDatetime) &&
        Objects.equals(this.providerId, dataConsentRequestedFaDto.providerId) &&
        Objects.equals(this.accountType, dataConsentRequestedFaDto.accountType) &&
        Objects.equals(this.accountIdentifier, dataConsentRequestedFaDto.accountIdentifier) &&
        Objects.equals(this.filters, dataConsentRequestedFaDto.filters);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && a.get().getClass().isArray() ? Arrays.equals((T[])a.get(), (T[])b.get()) : Objects.equals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(drn, fromDatetime, toDatetime, providerId, accountType, accountIdentifier, filters);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent()
      ? (a.get().getClass().isArray() ? Arrays.hashCode((T[])a.get()) : Objects.hashCode(a.get()))
      : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataConsentRequestedFaDto {\n");
    sb.append("    drn: ").append(toIndentedString(drn)).append("\n");
    sb.append("    fromDatetime: ").append(toIndentedString(fromDatetime)).append("\n");
    sb.append("    toDatetime: ").append(toIndentedString(toDatetime)).append("\n");
    sb.append("    providerId: ").append(toIndentedString(providerId)).append("\n");
    sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
    sb.append("    accountIdentifier: ").append(toIndentedString(accountIdentifier)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

