/*
 * My Data My Consent - Developer API
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mydatamyconsent.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mydatamyconsent.model.DataConsentRequestedAccountDto;
import com.mydatamyconsent.model.DataConsentRequestedDocument;
import com.mydatamyconsent.model.DataConsentRequestedDocumentDto;
import com.mydatamyconsent.model.DataConsentRequesterDto;
import com.mydatamyconsent.model.DataConsentStatus;
import com.mydatamyconsent.model.DataFetchFrequencyUnit;
import com.mydatamyconsent.model.DataFetchType;
import com.mydatamyconsent.model.DataLifeUnit;
import com.mydatamyconsent.model.JsonSchema;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import org.threeten.bp.OffsetDateTime;

/**
 * DataConsentDetailsDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-19T10:04:53.682265678Z[Etc/UTC]")
public class DataConsentDetailsDto {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_REQUESTER = "requester";
  @SerializedName(SERIALIZED_NAME_REQUESTER)
  private DataConsentRequesterDto requester;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_PERSONAL_INFO_REQUESTED = "personalInfoRequested";
  @SerializedName(SERIALIZED_NAME_PERSONAL_INFO_REQUESTED)
  private Boolean personalInfoRequested;

  public static final String SERIALIZED_NAME_DOCUMENTS = "documents";
  @SerializedName(SERIALIZED_NAME_DOCUMENTS)
  private Integer documents;

  public static final String SERIALIZED_NAME_FINANCIAL_ACCOUNTS = "financialAccounts";
  @SerializedName(SERIALIZED_NAME_FINANCIAL_ACCOUNTS)
  private Integer financialAccounts;

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transactionId";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private String transactionId;

  public static final String SERIALIZED_NAME_IP_ADDRESS = "ipAddress";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESS)
  private String ipAddress;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_PURPOSE_CODE = "purposeCode";
  @SerializedName(SERIALIZED_NAME_PURPOSE_CODE)
  private String purposeCode;

  public static final String SERIALIZED_NAME_PURPOSE_LINK = "purposeLink";
  @SerializedName(SERIALIZED_NAME_PURPOSE_LINK)
  private String purposeLink;

  public static final String SERIALIZED_NAME_AGREEMENT_ID = "agreementId";
  @SerializedName(SERIALIZED_NAME_AGREEMENT_ID)
  private UUID agreementId;

  public static final String SERIALIZED_NAME_DATA_LIFE_UNIT = "dataLifeUnit";
  @SerializedName(SERIALIZED_NAME_DATA_LIFE_UNIT)
  private DataLifeUnit dataLifeUnit;

  public static final String SERIALIZED_NAME_DATA_LIFE_VALUE = "dataLifeValue";
  @SerializedName(SERIALIZED_NAME_DATA_LIFE_VALUE)
  private Integer dataLifeValue;

  public static final String SERIALIZED_NAME_DATA_FETCH_FREQUENCY_UNIT = "dataFetchFrequencyUnit";
  @SerializedName(SERIALIZED_NAME_DATA_FETCH_FREQUENCY_UNIT)
  private DataFetchFrequencyUnit dataFetchFrequencyUnit;

  public static final String SERIALIZED_NAME_DATA_FETCH_FREQUENCY_UNIT_VALUE = "dataFetchFrequencyUnitValue";
  @SerializedName(SERIALIZED_NAME_DATA_FETCH_FREQUENCY_UNIT_VALUE)
  private Integer dataFetchFrequencyUnitValue;

  public static final String SERIALIZED_NAME_DATA_FETCH_TYPE = "dataFetchType";
  @SerializedName(SERIALIZED_NAME_DATA_FETCH_TYPE)
  private DataFetchType dataFetchType;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private DataConsentStatus status;

  public static final String SERIALIZED_NAME_APPROVED_AT_UTC = "approvedAtUtc";
  @SerializedName(SERIALIZED_NAME_APPROVED_AT_UTC)
  private OffsetDateTime approvedAtUtc;

  public static final String SERIALIZED_NAME_REJECTED_AT_UTC = "rejectedAtUtc";
  @SerializedName(SERIALIZED_NAME_REJECTED_AT_UTC)
  private OffsetDateTime rejectedAtUtc;

  public static final String SERIALIZED_NAME_EXPIRES_AT_UTC = "expiresAtUtc";
  @SerializedName(SERIALIZED_NAME_EXPIRES_AT_UTC)
  private OffsetDateTime expiresAtUtc;

  public static final String SERIALIZED_NAME_REQUESTED_AT_UTC = "requestedAtUtc";
  @SerializedName(SERIALIZED_NAME_REQUESTED_AT_UTC)
  private OffsetDateTime requestedAtUtc;

  public static final String SERIALIZED_NAME_REQUESTED_FINANCIAL_ACCOUNTS = "requestedFinancialAccounts";
  @SerializedName(SERIALIZED_NAME_REQUESTED_FINANCIAL_ACCOUNTS)
  private List<DataConsentRequestedAccountDto> requestedFinancialAccounts = null;

  public static final String SERIALIZED_NAME_REQUESTED_DOCUMENTS = "requestedDocuments";
  @SerializedName(SERIALIZED_NAME_REQUESTED_DOCUMENTS)
  private List<DataConsentRequestedDocumentDto> requestedDocuments = null;

  public static final String SERIALIZED_NAME_REQUESTED_HEALTH_DATA = "requestedHealthData";
  @SerializedName(SERIALIZED_NAME_REQUESTED_HEALTH_DATA)
  private List<DataConsentRequestedDocument> requestedHealthData = null;

  public static final String SERIALIZED_NAME_REQUESTED_IDENTITY_DETAILS = "requestedIdentityDetails";
  @SerializedName(SERIALIZED_NAME_REQUESTED_IDENTITY_DETAILS)
  private JsonSchema requestedIdentityDetails;


  public DataConsentDetailsDto id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    this.id = id;
  }


  public DataConsentDetailsDto requester(DataConsentRequesterDto requester) {
    
    this.requester = requester;
    return this;
  }

   /**
   * Get requester
   * @return requester
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DataConsentRequesterDto getRequester() {
    return requester;
  }


  public void setRequester(DataConsentRequesterDto requester) {
    this.requester = requester;
  }


  public DataConsentDetailsDto location(String location) {
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocation() {
    return location;
  }


  public void setLocation(String location) {
    this.location = location;
  }


  public DataConsentDetailsDto personalInfoRequested(Boolean personalInfoRequested) {
    
    this.personalInfoRequested = personalInfoRequested;
    return this;
  }

   /**
   * Get personalInfoRequested
   * @return personalInfoRequested
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getPersonalInfoRequested() {
    return personalInfoRequested;
  }


  public void setPersonalInfoRequested(Boolean personalInfoRequested) {
    this.personalInfoRequested = personalInfoRequested;
  }


  public DataConsentDetailsDto documents(Integer documents) {
    
    this.documents = documents;
    return this;
  }

   /**
   * Get documents
   * @return documents
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDocuments() {
    return documents;
  }


  public void setDocuments(Integer documents) {
    this.documents = documents;
  }


  public DataConsentDetailsDto financialAccounts(Integer financialAccounts) {
    
    this.financialAccounts = financialAccounts;
    return this;
  }

   /**
   * Get financialAccounts
   * @return financialAccounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getFinancialAccounts() {
    return financialAccounts;
  }


  public void setFinancialAccounts(Integer financialAccounts) {
    this.financialAccounts = financialAccounts;
  }


  public DataConsentDetailsDto transactionId(String transactionId) {
    
    this.transactionId = transactionId;
    return this;
  }

   /**
   * Get transactionId
   * @return transactionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTransactionId() {
    return transactionId;
  }


  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }


  public DataConsentDetailsDto ipAddress(String ipAddress) {
    
    this.ipAddress = ipAddress;
    return this;
  }

   /**
   * Get ipAddress
   * @return ipAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIpAddress() {
    return ipAddress;
  }


  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }


  public DataConsentDetailsDto description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public DataConsentDetailsDto purposeCode(String purposeCode) {
    
    this.purposeCode = purposeCode;
    return this;
  }

   /**
   * Get purposeCode
   * @return purposeCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPurposeCode() {
    return purposeCode;
  }


  public void setPurposeCode(String purposeCode) {
    this.purposeCode = purposeCode;
  }


  public DataConsentDetailsDto purposeLink(String purposeLink) {
    
    this.purposeLink = purposeLink;
    return this;
  }

   /**
   * Get purposeLink
   * @return purposeLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPurposeLink() {
    return purposeLink;
  }


  public void setPurposeLink(String purposeLink) {
    this.purposeLink = purposeLink;
  }


  public DataConsentDetailsDto agreementId(UUID agreementId) {
    
    this.agreementId = agreementId;
    return this;
  }

   /**
   * Get agreementId
   * @return agreementId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getAgreementId() {
    return agreementId;
  }


  public void setAgreementId(UUID agreementId) {
    this.agreementId = agreementId;
  }


  public DataConsentDetailsDto dataLifeUnit(DataLifeUnit dataLifeUnit) {
    
    this.dataLifeUnit = dataLifeUnit;
    return this;
  }

   /**
   * Get dataLifeUnit
   * @return dataLifeUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DataLifeUnit getDataLifeUnit() {
    return dataLifeUnit;
  }


  public void setDataLifeUnit(DataLifeUnit dataLifeUnit) {
    this.dataLifeUnit = dataLifeUnit;
  }


  public DataConsentDetailsDto dataLifeValue(Integer dataLifeValue) {
    
    this.dataLifeValue = dataLifeValue;
    return this;
  }

   /**
   * Get dataLifeValue
   * @return dataLifeValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDataLifeValue() {
    return dataLifeValue;
  }


  public void setDataLifeValue(Integer dataLifeValue) {
    this.dataLifeValue = dataLifeValue;
  }


  public DataConsentDetailsDto dataFetchFrequencyUnit(DataFetchFrequencyUnit dataFetchFrequencyUnit) {
    
    this.dataFetchFrequencyUnit = dataFetchFrequencyUnit;
    return this;
  }

   /**
   * Get dataFetchFrequencyUnit
   * @return dataFetchFrequencyUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DataFetchFrequencyUnit getDataFetchFrequencyUnit() {
    return dataFetchFrequencyUnit;
  }


  public void setDataFetchFrequencyUnit(DataFetchFrequencyUnit dataFetchFrequencyUnit) {
    this.dataFetchFrequencyUnit = dataFetchFrequencyUnit;
  }


  public DataConsentDetailsDto dataFetchFrequencyUnitValue(Integer dataFetchFrequencyUnitValue) {
    
    this.dataFetchFrequencyUnitValue = dataFetchFrequencyUnitValue;
    return this;
  }

   /**
   * Get dataFetchFrequencyUnitValue
   * @return dataFetchFrequencyUnitValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDataFetchFrequencyUnitValue() {
    return dataFetchFrequencyUnitValue;
  }


  public void setDataFetchFrequencyUnitValue(Integer dataFetchFrequencyUnitValue) {
    this.dataFetchFrequencyUnitValue = dataFetchFrequencyUnitValue;
  }


  public DataConsentDetailsDto dataFetchType(DataFetchType dataFetchType) {
    
    this.dataFetchType = dataFetchType;
    return this;
  }

   /**
   * Get dataFetchType
   * @return dataFetchType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DataFetchType getDataFetchType() {
    return dataFetchType;
  }


  public void setDataFetchType(DataFetchType dataFetchType) {
    this.dataFetchType = dataFetchType;
  }


  public DataConsentDetailsDto status(DataConsentStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DataConsentStatus getStatus() {
    return status;
  }


  public void setStatus(DataConsentStatus status) {
    this.status = status;
  }


  public DataConsentDetailsDto approvedAtUtc(OffsetDateTime approvedAtUtc) {
    
    this.approvedAtUtc = approvedAtUtc;
    return this;
  }

   /**
   * Get approvedAtUtc
   * @return approvedAtUtc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getApprovedAtUtc() {
    return approvedAtUtc;
  }


  public void setApprovedAtUtc(OffsetDateTime approvedAtUtc) {
    this.approvedAtUtc = approvedAtUtc;
  }


  public DataConsentDetailsDto rejectedAtUtc(OffsetDateTime rejectedAtUtc) {
    
    this.rejectedAtUtc = rejectedAtUtc;
    return this;
  }

   /**
   * Get rejectedAtUtc
   * @return rejectedAtUtc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getRejectedAtUtc() {
    return rejectedAtUtc;
  }


  public void setRejectedAtUtc(OffsetDateTime rejectedAtUtc) {
    this.rejectedAtUtc = rejectedAtUtc;
  }


  public DataConsentDetailsDto expiresAtUtc(OffsetDateTime expiresAtUtc) {
    
    this.expiresAtUtc = expiresAtUtc;
    return this;
  }

   /**
   * Get expiresAtUtc
   * @return expiresAtUtc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getExpiresAtUtc() {
    return expiresAtUtc;
  }


  public void setExpiresAtUtc(OffsetDateTime expiresAtUtc) {
    this.expiresAtUtc = expiresAtUtc;
  }


  public DataConsentDetailsDto requestedAtUtc(OffsetDateTime requestedAtUtc) {
    
    this.requestedAtUtc = requestedAtUtc;
    return this;
  }

   /**
   * Get requestedAtUtc
   * @return requestedAtUtc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getRequestedAtUtc() {
    return requestedAtUtc;
  }


  public void setRequestedAtUtc(OffsetDateTime requestedAtUtc) {
    this.requestedAtUtc = requestedAtUtc;
  }


  public DataConsentDetailsDto requestedFinancialAccounts(List<DataConsentRequestedAccountDto> requestedFinancialAccounts) {
    
    this.requestedFinancialAccounts = requestedFinancialAccounts;
    return this;
  }

  public DataConsentDetailsDto addRequestedFinancialAccountsItem(DataConsentRequestedAccountDto requestedFinancialAccountsItem) {
    if (this.requestedFinancialAccounts == null) {
      this.requestedFinancialAccounts = new ArrayList<DataConsentRequestedAccountDto>();
    }
    this.requestedFinancialAccounts.add(requestedFinancialAccountsItem);
    return this;
  }

   /**
   * Get requestedFinancialAccounts
   * @return requestedFinancialAccounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<DataConsentRequestedAccountDto> getRequestedFinancialAccounts() {
    return requestedFinancialAccounts;
  }


  public void setRequestedFinancialAccounts(List<DataConsentRequestedAccountDto> requestedFinancialAccounts) {
    this.requestedFinancialAccounts = requestedFinancialAccounts;
  }


  public DataConsentDetailsDto requestedDocuments(List<DataConsentRequestedDocumentDto> requestedDocuments) {
    
    this.requestedDocuments = requestedDocuments;
    return this;
  }

  public DataConsentDetailsDto addRequestedDocumentsItem(DataConsentRequestedDocumentDto requestedDocumentsItem) {
    if (this.requestedDocuments == null) {
      this.requestedDocuments = new ArrayList<DataConsentRequestedDocumentDto>();
    }
    this.requestedDocuments.add(requestedDocumentsItem);
    return this;
  }

   /**
   * Get requestedDocuments
   * @return requestedDocuments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<DataConsentRequestedDocumentDto> getRequestedDocuments() {
    return requestedDocuments;
  }


  public void setRequestedDocuments(List<DataConsentRequestedDocumentDto> requestedDocuments) {
    this.requestedDocuments = requestedDocuments;
  }


  public DataConsentDetailsDto requestedHealthData(List<DataConsentRequestedDocument> requestedHealthData) {
    
    this.requestedHealthData = requestedHealthData;
    return this;
  }

  public DataConsentDetailsDto addRequestedHealthDataItem(DataConsentRequestedDocument requestedHealthDataItem) {
    if (this.requestedHealthData == null) {
      this.requestedHealthData = new ArrayList<DataConsentRequestedDocument>();
    }
    this.requestedHealthData.add(requestedHealthDataItem);
    return this;
  }

   /**
   * Get requestedHealthData
   * @return requestedHealthData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<DataConsentRequestedDocument> getRequestedHealthData() {
    return requestedHealthData;
  }


  public void setRequestedHealthData(List<DataConsentRequestedDocument> requestedHealthData) {
    this.requestedHealthData = requestedHealthData;
  }


  public DataConsentDetailsDto requestedIdentityDetails(JsonSchema requestedIdentityDetails) {
    
    this.requestedIdentityDetails = requestedIdentityDetails;
    return this;
  }

   /**
   * Get requestedIdentityDetails
   * @return requestedIdentityDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonSchema getRequestedIdentityDetails() {
    return requestedIdentityDetails;
  }


  public void setRequestedIdentityDetails(JsonSchema requestedIdentityDetails) {
    this.requestedIdentityDetails = requestedIdentityDetails;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataConsentDetailsDto dataConsentDetailsDto = (DataConsentDetailsDto) o;
    return Objects.equals(this.id, dataConsentDetailsDto.id) &&
        Objects.equals(this.requester, dataConsentDetailsDto.requester) &&
        Objects.equals(this.location, dataConsentDetailsDto.location) &&
        Objects.equals(this.personalInfoRequested, dataConsentDetailsDto.personalInfoRequested) &&
        Objects.equals(this.documents, dataConsentDetailsDto.documents) &&
        Objects.equals(this.financialAccounts, dataConsentDetailsDto.financialAccounts) &&
        Objects.equals(this.transactionId, dataConsentDetailsDto.transactionId) &&
        Objects.equals(this.ipAddress, dataConsentDetailsDto.ipAddress) &&
        Objects.equals(this.description, dataConsentDetailsDto.description) &&
        Objects.equals(this.purposeCode, dataConsentDetailsDto.purposeCode) &&
        Objects.equals(this.purposeLink, dataConsentDetailsDto.purposeLink) &&
        Objects.equals(this.agreementId, dataConsentDetailsDto.agreementId) &&
        Objects.equals(this.dataLifeUnit, dataConsentDetailsDto.dataLifeUnit) &&
        Objects.equals(this.dataLifeValue, dataConsentDetailsDto.dataLifeValue) &&
        Objects.equals(this.dataFetchFrequencyUnit, dataConsentDetailsDto.dataFetchFrequencyUnit) &&
        Objects.equals(this.dataFetchFrequencyUnitValue, dataConsentDetailsDto.dataFetchFrequencyUnitValue) &&
        Objects.equals(this.dataFetchType, dataConsentDetailsDto.dataFetchType) &&
        Objects.equals(this.status, dataConsentDetailsDto.status) &&
        Objects.equals(this.approvedAtUtc, dataConsentDetailsDto.approvedAtUtc) &&
        Objects.equals(this.rejectedAtUtc, dataConsentDetailsDto.rejectedAtUtc) &&
        Objects.equals(this.expiresAtUtc, dataConsentDetailsDto.expiresAtUtc) &&
        Objects.equals(this.requestedAtUtc, dataConsentDetailsDto.requestedAtUtc) &&
        Objects.equals(this.requestedFinancialAccounts, dataConsentDetailsDto.requestedFinancialAccounts) &&
        Objects.equals(this.requestedDocuments, dataConsentDetailsDto.requestedDocuments) &&
        Objects.equals(this.requestedHealthData, dataConsentDetailsDto.requestedHealthData) &&
        Objects.equals(this.requestedIdentityDetails, dataConsentDetailsDto.requestedIdentityDetails);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && a.get().getClass().isArray() ? Arrays.equals((T[])a.get(), (T[])b.get()) : Objects.equals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, requester, location, personalInfoRequested, documents, financialAccounts, transactionId, ipAddress, description, purposeCode, purposeLink, agreementId, dataLifeUnit, dataLifeValue, dataFetchFrequencyUnit, dataFetchFrequencyUnitValue, dataFetchType, status, approvedAtUtc, rejectedAtUtc, expiresAtUtc, requestedAtUtc, requestedFinancialAccounts, requestedDocuments, requestedHealthData, requestedIdentityDetails);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent()
      ? (a.get().getClass().isArray() ? Arrays.hashCode((T[])a.get()) : Objects.hashCode(a.get()))
      : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataConsentDetailsDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    requester: ").append(toIndentedString(requester)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    personalInfoRequested: ").append(toIndentedString(personalInfoRequested)).append("\n");
    sb.append("    documents: ").append(toIndentedString(documents)).append("\n");
    sb.append("    financialAccounts: ").append(toIndentedString(financialAccounts)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    purposeCode: ").append(toIndentedString(purposeCode)).append("\n");
    sb.append("    purposeLink: ").append(toIndentedString(purposeLink)).append("\n");
    sb.append("    agreementId: ").append(toIndentedString(agreementId)).append("\n");
    sb.append("    dataLifeUnit: ").append(toIndentedString(dataLifeUnit)).append("\n");
    sb.append("    dataLifeValue: ").append(toIndentedString(dataLifeValue)).append("\n");
    sb.append("    dataFetchFrequencyUnit: ").append(toIndentedString(dataFetchFrequencyUnit)).append("\n");
    sb.append("    dataFetchFrequencyUnitValue: ").append(toIndentedString(dataFetchFrequencyUnitValue)).append("\n");
    sb.append("    dataFetchType: ").append(toIndentedString(dataFetchType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    approvedAtUtc: ").append(toIndentedString(approvedAtUtc)).append("\n");
    sb.append("    rejectedAtUtc: ").append(toIndentedString(rejectedAtUtc)).append("\n");
    sb.append("    expiresAtUtc: ").append(toIndentedString(expiresAtUtc)).append("\n");
    sb.append("    requestedAtUtc: ").append(toIndentedString(requestedAtUtc)).append("\n");
    sb.append("    requestedFinancialAccounts: ").append(toIndentedString(requestedFinancialAccounts)).append("\n");
    sb.append("    requestedDocuments: ").append(toIndentedString(requestedDocuments)).append("\n");
    sb.append("    requestedHealthData: ").append(toIndentedString(requestedHealthData)).append("\n");
    sb.append("    requestedIdentityDetails: ").append(toIndentedString(requestedIdentityDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

